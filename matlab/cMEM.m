% Loop through all simulations (incl. covariance matrices) and store
% estimated sources of cMEM
addpath('C:\Users\Lukas\Documents\projects\eeg_inverse_solutions\matlab\brainstorm3')
brainstorm

index = 0;
% Input files
sFiles = {...
    'C:\Users\Lukas\Documents\projects\eeg_inverse_solutions\matlab\protocols\Protocol02\data\Subject03\sim_10-epo\data_block001.mat'};

% Start a new report
bst_report('Start', sFiles);

% Process: Compute sources: BEst
sFiles = bst_process('CallProcess', 'process_inverse_mem', sFiles, [], ...
    'comment',     '', ...
    'method',      1, ...  % Maximum Entropy on the Mean (MEM)
    'mem',         struct(...
         'MEMpaneloptions', struct(...
               'InverseMethod', 'MEM', ...
               'automatic',     struct(...
                     'MEMexpert',   0, ...
                     'version',     '2.7.1', ...
                     'last_update', ''), ...
               'clustering',    struct(...
                     'neighborhood_order',   4, ...
                     'MSP_window',           10, ...
                     'clusters_type',        'static', ...
                     'MSP_scores_threshold', 0), ...
               'optional',      struct(...
                     'TimeSegment',     [0, 0.99], ...
                     'groupAnalysis',   0, ...
                     'Baseline',        [], ...
                     'BaselineHistory', {{{{{{{{'within'}}}}}}}}, ...
                     'display',         0, ...
                     'BaselineSegment', [0, 0.3]), ...
               'mandatory',     struct(...
                     'pipeline', 'cMEM'), ...
               'model',         struct(...
                     'active_mean_method', 2, ...
                     'alpha_method',       3, ...
                     'alpha_threshold',    0, ...
                     'initial_lambda',     1), ...
               'solver',        struct(...
                     'spatial_smoothing',  0.6, ...
                     'active_var_mult',    0.05, ...
                     'inactive_var_mult',  0, ...
                     'NoiseCov_method',    2, ...
                     'Optim_method',       'fminunc', ...
                     'parallel_matlab',    0, ...
                     'NoiseCov_recompute', 1))), ...
    'sensortypes', 'EEG', ...
    'output',      1);  % Full results: one per file

% Save and display report
ReportFile = bst_report('Save', sFiles);
bst_report('Open', ReportFile);
% bst_report('Export', ReportFile, ExportDir);

